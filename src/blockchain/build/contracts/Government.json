{
  "contractName": "Government",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "isRegisterCompany",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "registerCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "isRegisterSchool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "registerSchool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "isRegisterPerson",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_add",
          "type": "address"
        }
      ],
      "name": "registerPerson",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"isRegisterCompany\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"isRegisterPerson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"isRegisterSchool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"registerCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"registerPerson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"registerSchool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Government.sol\":\"Government\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Government.sol\":{\"keccak256\":\"0x602ed3a7ec6dcceeda8767235b0b7984977d15829831f995c9bcd44cb59e4444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22b751e8d17d530d77a82e203a376a3d653be5b4728c040666a45c46b3b0a975\",\"dweb:/ipfs/QmeRaKraYD3SHBtgSLUrq3HvzLCDKuZheAfWWJM2uhHtSR\"]},\"project:/contracts/IGovernment.sol\":{\"keccak256\":\"0xf06663d6ba5eb6d9072bd0fead7f3896e95aa418b82b11c671379d94df5af43b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://101e910d995c5728572939b80cc0c07fdbf68f84c814e8dbb16c0d80bdd562d3\",\"dweb:/ipfs/Qmca7CHYYCmRiKsi2xq6Qp6zzvTFF1LQ8xQmTZ59JrAXEn\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506109c1806100b76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a5fef0571161005b578063a5fef05714610111578063c9de9cdd1461012d578063e551658f14610149578063ff6b29c41461017957610088565b80631785f53c1461008d57806344f0f61c146100a957806370480275146100c5578063856a503e146100e1575b600080fd5b6100a760048036038101906100a291906108ab565b6101a9565b005b6100c360048036038101906100be91906108ab565b610292565b005b6100df60048036038101906100da91906108ab565b6103d6565b005b6100fb60048036038101906100f691906108ab565b6104be565b60405161010891906108f3565b60405180910390f35b61012b600480360381019061012691906108ab565b610514565b005b610147600480360381019061014291906108ab565b610658565b005b610163600480360381019061015e91906108ab565b61079c565b60405161017091906108f3565b60405180910390f35b610193600480360381019061018e91906108ab565b6107f2565b6040516101a091906108f3565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022e9061096b565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061033c575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b61037b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103729061096b565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b9061096b565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806105be575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b6105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f49061096b565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610702575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610741576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107389061096b565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108788261084d565b9050919050565b6108888161086d565b811461089357600080fd5b50565b6000813590506108a58161087f565b92915050565b6000602082840312156108c1576108c0610848565b5b60006108cf84828501610896565b91505092915050565b60008115159050919050565b6108ed816108d8565b82525050565b600060208201905061090860008301846108e4565b92915050565b600082825260208201905092915050565b7f6f6e6c7920676f7665726d656e742061646d696e20697320616c6c6f77656400600082015250565b6000610955601f8361090e565b91506109608261091f565b602082019050919050565b6000602082019050818103600083015261098481610948565b905091905056fea26469706673582212208e5ff093abff57e76af9ef16de2e2f4a8cbcdbcb1fe4acf34ae95b1c625b8c3a64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063a5fef0571161005b578063a5fef05714610111578063c9de9cdd1461012d578063e551658f14610149578063ff6b29c41461017957610088565b80631785f53c1461008d57806344f0f61c146100a957806370480275146100c5578063856a503e146100e1575b600080fd5b6100a760048036038101906100a291906108ab565b6101a9565b005b6100c360048036038101906100be91906108ab565b610292565b005b6100df60048036038101906100da91906108ab565b6103d6565b005b6100fb60048036038101906100f691906108ab565b6104be565b60405161010891906108f3565b60405180910390f35b61012b600480360381019061012691906108ab565b610514565b005b610147600480360381019061014291906108ab565b610658565b005b610163600480360381019061015e91906108ab565b61079c565b60405161017091906108f3565b60405180910390f35b610193600480360381019061018e91906108ab565b6107f2565b6040516101a091906108f3565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022e9061096b565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061033c575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b61037b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103729061096b565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610464576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045b9061096b565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806105be575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b6105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f49061096b565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610702575060011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b610741576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107389061096b565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108788261084d565b9050919050565b6108888161086d565b811461089357600080fd5b50565b6000813590506108a58161087f565b92915050565b6000602082840312156108c1576108c0610848565b5b60006108cf84828501610896565b91505092915050565b60008115159050919050565b6108ed816108d8565b82525050565b600060208201905061090860008301846108e4565b92915050565b600082825260208201905092915050565b7f6f6e6c7920676f7665726d656e742061646d696e20697320616c6c6f77656400600082015250565b6000610955601f8361090e565b91506109608261091f565b602082019050919050565b6000602082019050818103600083015261098481610948565b905091905056fea26469706673582212208e5ff093abff57e76af9ef16de2e2f4a8cbcdbcb1fe4acf34ae95b1c625b8c3a64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2759:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:13",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:13",
                "type": ""
              }
            ],
            "src": "7:75:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:13"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:13",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:13"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:13",
                "type": ""
              }
            ],
            "src": "334:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:13",
                "type": ""
              }
            ],
            "src": "466:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:13"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:13"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:13"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:13",
                "type": ""
              }
            ],
            "src": "568:122:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:13"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:13",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:13",
                "type": ""
              }
            ],
            "src": "696:139:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:13"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:13",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:13",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:13",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:13",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:13",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:13"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:13"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:13"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:13"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:13"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:13",
                "type": ""
              }
            ],
            "src": "841:329:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1218:48:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1228:32:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1253:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1246:6:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:13:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:21:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1228:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1200:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1210:7:13",
                "type": ""
              }
            ],
            "src": "1176:90:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1331:50:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1348:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1368:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1353:14:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:21:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1341:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1341:34:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1341:34:13"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1319:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1326:3:13",
                "type": ""
              }
            ],
            "src": "1272:109:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:118:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1489:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1501:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1512:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1497:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1497:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1489:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1563:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1576:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1587:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1572:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1572:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1525:37:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:65:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1525:65:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1451:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1463:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1474:4:13",
                "type": ""
              }
            ],
            "src": "1387:210:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1699:73:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1716:3:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1721:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1709:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1709:19:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1709:19:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1737:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1756:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1761:4:13",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1752:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:14:13"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1737:11:13"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1671:3:13",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1676:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1687:11:13",
                "type": ""
              }
            ],
            "src": "1603:169:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1884:75:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1906:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1914:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1902:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1902:14:13"
                      },
                      {
                        "hexValue": "6f6e6c7920676f7665726d656e742061646d696e20697320616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1918:33:13",
                        "type": "",
                        "value": "only goverment admin is allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1895:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1895:57:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1895:57:13"
                }
              ]
            },
            "name": "store_literal_in_memory_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1876:6:13",
                "type": ""
              }
            ],
            "src": "1778:181:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2111:220:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2121:74:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2187:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2192:2:13",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2128:58:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2128:67:13"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2121:3:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2293:3:13"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216",
                      "nodeType": "YulIdentifier",
                      "src": "2204:88:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:93:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2204:93:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2306:19:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2317:3:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2322:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2313:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2313:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2306:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2099:3:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2107:3:13",
                "type": ""
              }
            ],
            "src": "1965:366:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2508:248:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2518:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2530:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2541:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2526:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2526:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2518:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2565:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2576:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2561:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2561:17:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2584:4:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2590:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2580:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2580:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2554:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2554:47:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2554:47:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2610:139:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2744:4:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2618:124:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2618:131:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2610:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2488:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2503:4:13",
                "type": ""
              }
            ],
            "src": "2337:419:13"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216(memPtr) {\n\n        mstore(add(memPtr, 0), \"only goverment admin is allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "84:1634:5:-:0;;;390:91;;;;;;;;;;426:10;418:5;;:18;;;;;;;;;;;;;;;;;;470:4;446:9;:21;456:10;446:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;84:1634;;;;;;",
  "deployedSourceMap": "84:1634:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1359:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;765:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1224:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1107:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1608:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;969:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1473:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;865:98;539:10;530:19;;:5;;;;;;;;;;:19;;;522:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;951:5:::1;933:9;:15;943:4;933:15;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;865:98:::0;:::o;1359:108::-;661:10;652:19;;:5;;;;;;;;;;:19;;;:52;;;;700:4;675:29;;:9;:21;685:10;675:21;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;652:52;644:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;1456:4:::1;1430:17;:23;1448:4;1430:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1359:108:::0;:::o;765:94::-;539:10;530:19;;:5;;;;;;;;;;:19;;;522:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;848:4:::1;830:9:::0;:15:::1;840:4;830:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;765:94:::0;:::o;1224:129::-;1296:4;1323:17;:23;1341:4;1323:23;;;;;;;;;;;;;;;;;;;;;;;;;1316:30;;1224:129;;;:::o;1107:111::-;661:10;652:19;;:5;;;;;;;;;;:19;;;:52;;;;700:4;675:29;;:9;:21;685:10;675:21;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;652:52;644:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;1207:4:::1;1179:19;:25;1199:4;1179:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1107:111:::0;:::o;1608:108::-;661:10;652:19;;:5;;;;;;;;;;:19;;;:52;;;;700:4;675:29;;:9;:21;685:10;675:21;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;652:52;644:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:4:::1;1679:17;:23;1697:4;1679:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1608:108:::0;:::o;969:132::-;1042:4;1069:19;:25;1089:4;1069:25;;;;;;;;;;;;;;;;;;;;;;;;;1062:32;;969:132;;;:::o;1473:129::-;1545:4;1572:17;:23;1590:4;1572:23;;;;;;;;;;;;;;;;;;;;;;;;;1565:30;;1473:129;;;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:169::-;1687:11;1721:6;1716:3;1709:19;1761:4;1756:3;1752:14;1737:29;;1603:169;;;;:::o;1778:181::-;1918:33;1914:1;1906:6;1902:14;1895:57;1778:181;:::o;1965:366::-;2107:3;2128:67;2192:2;2187:3;2128:67;:::i;:::-;2121:74;;2204:93;2293:3;2204:93;:::i;:::-;2322:2;2317:3;2313:12;2306:19;;1965:366;;;:::o;2337:419::-;2503:4;2541:2;2530:9;2526:18;2518:26;;2590:9;2584:4;2580:20;2576:1;2565:9;2561:17;2554:47;2618:131;2744:4;2618:131;:::i;:::-;2610:139;;2337:419;;;:::o",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./IGovernment.sol\";\n\ncontract Government is IGovernment\n{   \n    //default is false;\n    address owner;\n    mapping(address => bool) private adminList;\n    mapping(address => bool) private registeredPersons;\n    mapping(address => bool) private registeredCompanies;\n    mapping(address => bool) private registeredSchools;\n\n    constructor()\n    {\n        owner = msg.sender;\n        adminList[msg.sender] = true;\n    }\n\n    modifier onlyOwner()\n    {\n        require(owner == msg.sender, \"only goverment admin is allowed\");\n        _;\n    }\n\n    modifier onlyAdmin()\n    {\n        require(owner == msg.sender || adminList[msg.sender] == true, \"only goverment admin is allowed\");\n        _;\n    } \n\n    function addAdmin(address _add) public onlyOwner()\n    {\n        adminList[_add] = true;\n    }\n\n    function removeAdmin(address _add) public onlyOwner()\n    {\n        adminList[_add] = false;\n    }\n\n    function isRegisterCompany(address _add) external override view returns (bool)\n    {\n        return registeredCompanies[_add];\n    }\n\n    function registerCompany(address _add) public onlyAdmin()\n    {\n        registeredCompanies[_add] = true;\n    }\n\n    function isRegisterSchool(address _add) external override view returns (bool)\n    {\n        return registeredSchools[_add];\n    }\n\n    function registerSchool(address _add) public onlyAdmin()\n    {\n        registeredSchools[_add] = true;\n    }\n\n    function isRegisterPerson(address _add) external override view returns (bool)\n    {\n        return registeredPersons[_add];\n    }\n\n    function registerPerson(address _add) public onlyAdmin()\n    {\n        registeredPersons[_add] = true;\n    }\n}\n",
  "sourcePath": "/Users/zhougaoqiang/Documents/GitHub/SmartCertify/web-app/blockchain/contracts/Government.sol",
  "ast": {
    "absolutePath": "project:/contracts/Government.sol",
    "exportedSymbols": {
      "Government": [
        977
      ],
      "IGovernment": [
        1085
      ]
    },
    "id": 978,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 799,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:5"
      },
      {
        "absolutePath": "project:/contracts/IGovernment.sol",
        "file": "./IGovernment.sol",
        "id": 800,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 978,
        "sourceUnit": 1086,
        "src": "55:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 801,
              "name": "IGovernment",
              "nameLocations": [
                "107:11:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1085,
              "src": "107:11:5"
            },
            "id": 802,
            "nodeType": "InheritanceSpecifier",
            "src": "107:11:5"
          }
        ],
        "canonicalName": "Government",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 977,
        "linearizedBaseContracts": [
          977,
          1085
        ],
        "name": "Government",
        "nameLocation": "93:10:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 804,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "160:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 977,
            "src": "152:13:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 803,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "152:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 808,
            "mutability": "mutable",
            "name": "adminList",
            "nameLocation": "204:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 977,
            "src": "171:42:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 807,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 805,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "179:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "171:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 806,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "190:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 812,
            "mutability": "mutable",
            "name": "registeredPersons",
            "nameLocation": "252:17:5",
            "nodeType": "VariableDeclaration",
            "scope": 977,
            "src": "219:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 811,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 809,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "227:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "219:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 810,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "238:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 816,
            "mutability": "mutable",
            "name": "registeredCompanies",
            "nameLocation": "308:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 977,
            "src": "275:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 815,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 813,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "283:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "275:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 814,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "294:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 820,
            "mutability": "mutable",
            "name": "registeredSchools",
            "nameLocation": "366:17:5",
            "nodeType": "VariableDeclaration",
            "scope": 977,
            "src": "333:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 819,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 817,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "341:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "333:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 818,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "352:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 835,
              "nodeType": "Block",
              "src": "408:73:5",
              "statements": [
                {
                  "expression": {
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 823,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "418:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 824,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "426:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "430:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "426:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "418:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "418:18:5"
                },
                {
                  "expression": {
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 828,
                        "name": "adminList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "446:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 831,
                      "indexExpression": {
                        "expression": {
                          "id": 829,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "456:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "460:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "456:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "446:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "470:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "446:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 834,
                  "nodeType": "ExpressionStatement",
                  "src": "446:28:5"
                }
              ]
            },
            "id": 836,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:5"
            },
            "returnParameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:5"
            },
            "scope": 977,
            "src": "390:91:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 847,
              "nodeType": "Block",
              "src": "512:91:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 839,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "530:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 840,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "539:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "543:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "539:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "530:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920676f7665726d656e742061646d696e20697320616c6c6f776564",
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "551:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216",
                          "typeString": "literal_string \"only goverment admin is allowed\""
                        },
                        "value": "only goverment admin is allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216",
                          "typeString": "literal_string \"only goverment admin is allowed\""
                        }
                      ],
                      "id": 838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "522:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "522:63:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "522:63:5"
                },
                {
                  "id": 846,
                  "nodeType": "PlaceholderStatement",
                  "src": "595:1:5"
                }
              ]
            },
            "id": 848,
            "name": "onlyOwner",
            "nameLocation": "496:9:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:2:5"
            },
            "src": "487:116:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "634:124:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 851,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "652:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 852,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "661:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "665:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "661:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "652:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 855,
                              "name": "adminList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "675:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 858,
                            "indexExpression": {
                              "expression": {
                                "id": 856,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "685:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "689:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "685:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "675:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
                            "id": 859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "700:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "675:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "652:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920676f7665726d656e742061646d696e20697320616c6c6f776564",
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "706:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216",
                          "typeString": "literal_string \"only goverment admin is allowed\""
                        },
                        "value": "only goverment admin is allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b010b4a3e09942b92a3354e87ea10e8a80b0f3c276cfa4a089fa5e716a15216",
                          "typeString": "literal_string \"only goverment admin is allowed\""
                        }
                      ],
                      "id": 850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "644:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:96:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "644:96:5"
                },
                {
                  "id": 865,
                  "nodeType": "PlaceholderStatement",
                  "src": "750:1:5"
                }
              ]
            },
            "id": 867,
            "name": "onlyAdmin",
            "nameLocation": "618:9:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "627:2:5"
            },
            "src": "609:149:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 880,
              "nodeType": "Block",
              "src": "820:39:5",
              "statements": [
                {
                  "expression": {
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 874,
                        "name": "adminList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "830:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 876,
                      "indexExpression": {
                        "id": 875,
                        "name": "_add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "840:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "830:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "848:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "830:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "830:22:5"
                }
              ]
            },
            "functionSelector": "70480275",
            "id": 881,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 872,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 871,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "804:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 848,
                  "src": "804:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "804:11:5"
              }
            ],
            "name": "addAdmin",
            "nameLocation": "774:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "791:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "783:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "783:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "782:14:5"
            },
            "returnParameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:0:5"
            },
            "scope": 977,
            "src": "765:94:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 894,
              "nodeType": "Block",
              "src": "923:40:5",
              "statements": [
                {
                  "expression": {
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 888,
                        "name": "adminList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "933:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 890,
                      "indexExpression": {
                        "id": 889,
                        "name": "_add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "943:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "933:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "951:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "933:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 893,
                  "nodeType": "ExpressionStatement",
                  "src": "933:23:5"
                }
              ]
            },
            "functionSelector": "1785f53c",
            "id": 895,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 886,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 885,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "907:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 848,
                  "src": "907:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "907:11:5"
              }
            ],
            "name": "removeAdmin",
            "nameLocation": "874:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "894:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 895,
                  "src": "886:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "885:14:5"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:0:5"
            },
            "scope": 977,
            "src": "865:98:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1077
            ],
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "1052:49:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 903,
                      "name": "registeredCompanies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "1069:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 905,
                    "indexExpression": {
                      "id": 904,
                      "name": "_add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "1089:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1069:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 902,
                  "id": 906,
                  "nodeType": "Return",
                  "src": "1062:32:5"
                }
              ]
            },
            "functionSelector": "e551658f",
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisterCompany",
            "nameLocation": "978:17:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 899,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1019:8:5"
            },
            "parameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "1004:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "996:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "995:14:5"
            },
            "returnParameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "1042:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1041:6:5"
            },
            "scope": 977,
            "src": "969:132:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 921,
              "nodeType": "Block",
              "src": "1169:49:5",
              "statements": [
                {
                  "expression": {
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 915,
                        "name": "registeredCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "1179:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 917,
                      "indexExpression": {
                        "id": 916,
                        "name": "_add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "1199:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1179:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1207:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1179:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "1179:32:5"
                }
              ]
            },
            "functionSelector": "a5fef057",
            "id": 922,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 913,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 912,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1153:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 867,
                  "src": "1153:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1153:11:5"
              }
            ],
            "name": "registerCompany",
            "nameLocation": "1116:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "1140:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "1132:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:14:5"
            },
            "returnParameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:0:5"
            },
            "scope": 977,
            "src": "1107:111:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1070
            ],
            "body": {
              "id": 934,
              "nodeType": "Block",
              "src": "1306:47:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 930,
                      "name": "registeredSchools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "1323:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 932,
                    "indexExpression": {
                      "id": 931,
                      "name": "_add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 924,
                      "src": "1341:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1323:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 929,
                  "id": 933,
                  "nodeType": "Return",
                  "src": "1316:30:5"
                }
              ]
            },
            "functionSelector": "856a503e",
            "id": 935,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisterSchool",
            "nameLocation": "1233:16:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 926,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1273:8:5"
            },
            "parameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 924,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "1258:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "1250:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1249:14:5"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "1296:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1295:6:5"
            },
            "scope": 977,
            "src": "1224:129:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 948,
              "nodeType": "Block",
              "src": "1420:47:5",
              "statements": [
                {
                  "expression": {
                    "id": 946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 942,
                        "name": "registeredSchools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "1430:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 944,
                      "indexExpression": {
                        "id": 943,
                        "name": "_add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "1448:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1430:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1456:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1430:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 947,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:30:5"
                }
              ]
            },
            "functionSelector": "44f0f61c",
            "id": 949,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 940,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 939,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1404:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 867,
                  "src": "1404:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1404:11:5"
              }
            ],
            "name": "registerSchool",
            "nameLocation": "1368:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "1391:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1383:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:14:5"
            },
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:5"
            },
            "scope": 977,
            "src": "1359:108:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1084
            ],
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "1555:47:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 957,
                      "name": "registeredPersons",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "1572:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 959,
                    "indexExpression": {
                      "id": 958,
                      "name": "_add",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "1590:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1572:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 956,
                  "id": 960,
                  "nodeType": "Return",
                  "src": "1565:30:5"
                }
              ]
            },
            "functionSelector": "ff6b29c4",
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisterPerson",
            "nameLocation": "1482:16:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 953,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1522:8:5"
            },
            "parameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "1507:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "1499:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:14:5"
            },
            "returnParameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 955,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "1545:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 954,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1544:6:5"
            },
            "scope": 977,
            "src": "1473:129:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 975,
              "nodeType": "Block",
              "src": "1669:47:5",
              "statements": [
                {
                  "expression": {
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 969,
                        "name": "registeredPersons",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "1679:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 971,
                      "indexExpression": {
                        "id": 970,
                        "name": "_add",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "1697:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1679:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1705:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1679:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "1679:30:5"
                }
              ]
            },
            "functionSelector": "c9de9cdd",
            "id": 976,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 967,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 966,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1653:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 867,
                  "src": "1653:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1653:11:5"
              }
            ],
            "name": "registerPerson",
            "nameLocation": "1617:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "_add",
                  "nameLocation": "1640:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 976,
                  "src": "1632:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1632:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1631:14:5"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:0:5"
            },
            "scope": 977,
            "src": "1608:108:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 978,
        "src": "84:1634:5",
        "usedErrors": []
      }
    ],
    "src": "31:1688:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "1688": {
      "events": {},
      "links": {},
      "address": "0x629838003bBBaD2383b42A0FfDE394dA869B7ace",
      "transactionHash": "0xec3996984360e065f46514cd5917b93b06b2f9e93d223f64de3800af3f8accee"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-03-31T05:40:39.831Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}